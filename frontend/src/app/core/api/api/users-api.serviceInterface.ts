/**
 * Service Search App REST API documentation
 * This file holds the REST API documentation of the Hollo Event Notifier project.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CreateUserRequestDto } from '../model/models';
import { UserCredentialsDto } from '../model/models';
import { UserDto } from '../model/models';
import { UserRegistrationDto } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface UsersApiServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Checks if the user has valid JWT token in cookie
     *
     */
    checkToken(extraHttpRequestParams?: any): Observable<UserDto>;

    /**
     * Creates new user
     *
     * @param createUserRequestDto user to create
     */
    createUser(createUserRequestDto: CreateUserRequestDto, extraHttpRequestParams?: any): Observable<UserDto>;

    /**
     * Deletes user with given ID
     *
     * @param id UUID of user to delete
     */
    deleteUserById(id: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Provides all user in application
     *
     */
    getAllUsers(extraHttpRequestParams?: any): Observable<Array<UserDto>>;

    /**
     * Logs user into the system
     *
     * @param userCredentialsDto user credentials
     */
    login(userCredentialsDto: UserCredentialsDto, extraHttpRequestParams?: any): Observable<UserDto>;

    /**
     * Registers a user into the system
     *
     * @param userRegistrationDto user registration form
     */
    registerUser(userRegistrationDto: UserRegistrationDto, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Updates existing user in application
     *
     * @param userDto user credentials
     */
    updateUser(userDto: UserDto, extraHttpRequestParams?: any): Observable<UserDto>;

}
