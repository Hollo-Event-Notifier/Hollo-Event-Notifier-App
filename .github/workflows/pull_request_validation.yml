name: Validation

on: 
  push:

jobs:
  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.0

      - name: Install dependencies
        run: npm --prefix frontend install

      - name: Build Angular Application
        run: npm --prefix frontend run build

  backend-build:
    name: Backend Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build
        run: |
          cd backend
          ./gradlew build
  frontend-test:
    runs-on: ubuntu-latest
    needs: frontend-build
    name: Frontend Test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.0

      - name: Install dependencies
        run: npm --prefix frontend install

      - name: Test Frontend with Coverage
        run: npm --prefix frontend run test -- --watch=false --code-coverage=true --browsers=ChromeHeadless

      - name: Upload Coverage Report Artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage-report
          path: .github/workflows


  backend-test:
    needs: backend-build
    name: Backend Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Test Backend
        run: |
          cd backend
          ./gradlew test jacocoTestReport

      - name: Upload Coverage Report Artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage-report
          path: .github/workflows
          
  sonarcloud:
    name: Analyze project with SonarCloud
    if: ${{ always() }}
    needs: [backend-test, frontend-test]
    runs-on: ubuntu-latest
    steps:
      - name: Download Frontend Coverage Report
        uses: actions/download-artifact@v3
        with:
          name: frontend-coverage-report
          path: .github/workflows

      - name: Download Backend Coverage Report
        uses: actions/download-artifact@v3
        with:
          name: backend-coverage-report
          path: .github/workflows
          
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - name: Install SonarScanner
        run: |
          curl -L -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner.zip
          rm sonar-scanner.zip
          export SONAR_SCANNER_HOME=$PWD/sonar-scanner-4.6.2.2472-linux
          export PATH=$SONAR_SCANNER_HOME/bin:$PATH

      - name: SonarCloud Scan
        run: $SONAR_SCANNER_HOME/bin/sonar-scanner -Dproject.settings=./sonar-project.properties
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
